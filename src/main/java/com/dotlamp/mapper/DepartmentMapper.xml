<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dotlamp.mapper.DepartmentMapper">

    <sql id="criteria">
        <trim prefix="(" suffix=") AND " prefixOverrides="OR">
            <foreach item='type' collection="typeArr">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            title like '%'||#{keyword}||'%'
                        </when>
                        <when test="type == 'C'.toString()">
                            content like '%'||#{keyword}||'%'
                        </when>
                        <when test="type == 'W'.toString()">
                            writer like '%'||#{keyword}||'%'
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>

    <select id="getListWithPaging">
        <![CDATA[
        select dno, name, tel1, tel2, tel3, post, adr1, adr2, adr3
        from
            (
            select /*+INDEX_DESC(departments pk_department) */
                rownum rn, dno, name, tel1, tel2, tel3, post, adr1, adr2, adr3
                from
                    departments
                    where
			]]>
        <include refid="criteria"></include>
        <![CDATA[
rownum <= #{pageNum} * #{amount} )
where rn > (#{pageNum}-1) * #{amount}
		]]>
    </select>

    <insert id="insert">
        <selectKey keyProperty="bno" order="BEFORE" resultType="int">
            select board_seq.nextval from dual
        </selectKey>
        insert into departments(dno, name, tel1, tel2, tel3, post, adr1, adr2, adr3)
        values (seq_board.nextval, #{name}, #{tel1}, #{tel2}, #{tel3}, #{post}, #{adr1}, #{adr2}, #{adr3})
    </insert>

    <select id="read">
		select dno, name, tel1, tel2, tel3, post, adr1, adr2, adr3)
				from departments
				where dno = #{dno}
	</select>

    <delete id="delete">
		delete from departments where dno = #{dno}
	</delete>

    <update id="update">
		update departments
		set name =#{name}, tel1=#{tel1}, tel2=#{tel2}, tel3=#{tel3}, post=#{post}, adr1 = #{adr1}, adr2=#{adr2}, adr3=#{adr3}
		where dno = #{dno}
	</update>

    <select id="getTotalCount" resultType="int">
        select count(*) from departments
        where
        <include refid="criteria"></include>
        dno > 0
    </select>


</mapper>